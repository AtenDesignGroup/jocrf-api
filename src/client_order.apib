# Group Client Orders

## Order collection [/api/clients/{user}/orders]

+ Parameters

    + user: 199 (number) - Client ID

### Fetch multiple orders [GET]

+ Response 200 (application/json)

    + Attributes
        + orders (array)
            - (Order)
              + id: 1234

    + Body

### Create order [POST]

+ Request (application/json)

    + Attributes (Order)

+ Response 201 (application/json)

    + Attributes (Order)

## Order individual [/api/clients/{user}/orders/{order}]

+ Parameters

    + user: 300215 (number) - Client ID
    + order: 2493 (number) - Order ID

### Fetch order [GET]

+ Response 200 (application/json)

  + Attributes (Order)

### Update order [POST]

+ Response 200 (application/json)

  + Attributes (Order)

### Cancel order [DELETE]

+ Response 202

    + Attributes (Order)
      + status: canceled (string) - Order canceled status

## Order Payments [/api/clients/{user}/orders/{order}/payments]

+ Parameters

    + user: 199 (number) - Client ID
    + order: 2949 (number) - Order ID

### Fetch multiple order payments [GET]

Get a list of orders for a specific client

+ Response 200 (application/json)

    + Attributes (array[Payment])

### Create order payment [POST]
Create a new order payment using an existing payment method ID.

+ Request (application/json)

        {
            "date": "2018-07-03T17:35:00-600",
            "method": "8444",
            "skip_payment_gateway": true,
            "amount": 100
        }

+ Response 201 (application/json)

    + Attributes (array[Payment])

### Create order payment (new payment method) [POST]
Create a new order payment and create the payment method simultaneously.

+ Request (application/json)

    + Attributes (object)

        + date: `2018-07-03T17:35:00-600`
        + method: (Payment Method)
        + `skip_payment_gateway`: true
        + amount: 100

+ Response 201 (application/json)

    + Attributes (array[Payment])
